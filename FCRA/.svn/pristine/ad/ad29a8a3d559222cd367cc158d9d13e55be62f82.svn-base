# The ESAPI validator does many security checks on input, such as canonicalization
# and whitelist validation. Note that all of these validation rules are applied *after*
# canonicalization. Double-encoded characters (even with different encodings involved,
# are never allowed.
#
# To use:
#
# First set up a pattern below. You can choose any name you want, prefixed by the word
# "Validation." For example:
#   Validation.Email=^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\\.[a-zA-Z]{2,4}$
# 
# Then you can validate in your code against the pattern like this:
#     ESAPI.validator().isValidInput("User Email", input, "Email", maxLength, allowNull);
# Where maxLength and allowNull are set for you needs, respectively.
#
# But note, when you use boolean variants of validation functions, you lose critical 
# canonicalization. It is preferable to use the "get" methods (which throw exceptions) and 
# and use the returned user input which is in canonical form. Consider the following:
#  
# try {
#    someObject.setEmail(ESAPI.validator().getValidInput("User Email", input, "Email", maxLength, allowNull));
#
Validator.SafeString=^[.\\p{Alnum}\\p{Space}]{0,1024}$
Validator.MailBody=^[\\w\\s-_,\:/.'^&;<(\\"[^\\"]*\\"|'[^']*'|[^'\\">])*>]*$
Validator.Email=^[A-Za-z0-9\\._%'-]+@[A-Za-z0-9\\.-]+\\.[a-zA-Z]{2,}$
Validator.IPAddress=^(?\:(?\:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?\:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
Validator.URL=^(ht|f)tp(s?)\\\:\\/\\/[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(\:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\\:\\'\\/\\\\\\+\=&amp;%\\$\#_]*)?$
Validator.CreditCard=^(\\d{4}[- ]?){3}\\d{4}$
Validator.SSN=^(?\!000)([0-6]\\d{2}|7([0-6]\\d|7[012]))([ -]?)(?\!00)\\d\\d\\3(?\!0000)\\d{4}$
Validator.Password=^[A-Za-z0-9._%'\\-@!#^*$]+$
Validator.UserId=^[A-Za-z0-9_]+$
Validator.VisaId=^\\d{1,3}
Validator.VisaName=^([a-z\\sA-Z])*{1,30}$
Validator.VisaCode=^[\\w]*{1,15}
Validator.MRZCode=^[\\w]
Validator.VisaEntryId=^[\\d]{1,2}
Validator.VisaDesc=^[A-Z a-z]{1,30}
Validator.ActionId=^[\\d]{1}
Validator.ActionName=^[a-zA-Z]{1,20}$
Validator.TravelModeId=^[\\d]{1,2}
Validator.TravelModeType=^[a-zA-Z]{1}
Validator.TravelModeDesc=^[a-zA-Z]{1,30}
Validator.SmenuId=^[\\d]{1,3}
Validator.SmenuName=^[a-z\\sA-Z-]*{1,50}
Validator.ActionPath=^[\\w\\s)(-_,\:&/@?\#.]*$
Validator.Pincode=^[\\d]*$
Validator.Phone=^[0-9-]*$
Validator.Mobile=^[\\d]*$
Validator.StateName=^[a-z\\sA-Z]{1,50}
Validator.SexCode=^[a-zA-Z]{1}
Validator.SexDesc=^[\\w\\s)(-_,\:'"&/]{1,15}$
Validator.ServiceCode=^[a-zA-Z]{1,3}
Validator.ServiceDesc=^[\\w\\s)(-_,\:'"&/]{1,50}$
Validator.RoleName=^[a-z\\sA-Z]{1,50}
Validator.RiskCode=^[a-zA-Z]{1}
Validator.RiskDesc=^[\\w\\s)(-_,\:'"&/]{1,20}$
Validator.RelationName=^[a-z\\sA-Z]{1,50}
Validator.PurposeDesc=^[\\w\\s\:/&)(,_]{1,50}$
Validator.Alpha=^[A-Za-z]*$
Validator.AlphaS=^[a-z\\sA-Z]*$
Validator.AlphaSS=^[a-zA-Z\\s)(-_,\:/]*$
Validator.Word=^[\\w]*$
Validator.WordS=^[\\w\\s]*$
Validator.RoomUtil=^[\\w\\s-]*$
Validator.WordSS=^[\\w\\s-_,\:/@\#.$\!*'%^()]*$
Validator.EmailMessage=^[\\w\\s-_,\:/><;&@.^()]*$

Validator.Num=^[\\d]*$
Vaidator.Num_Comma_Seprated=^[\\d,]*$
Validator.NumM=^[\\d-]*$
Validator.NumS=^[\\d\\s]*$
Validator.NumSS=^[\\d\\s-/]*$
Validator.CategoryId=^[\\w]*$
Validator.PassportNumber=^[\\w]*$
Validator.ApplicationId=^[\\w]*$
Validator.Surname=^[a-z\\sA-Z]*$
Validator.GivenName=^[a-z\\sA-Z]*$
Validator.FatherName=^[a-z\\sA-Z]*$
Validator.DateOfBirth=^[\\d\\s-/]*$
Validator.Date=^(0[1-9]|[12][0-9]|3[01])[-](0[1-9]|1[012])[-](19|20|21)\\d\\d$
Validator.ScrutinyRemark=^[\\w\\s)(-_,\:/@\#.]*$
Validator.ReferedRemark=^[\\w\\s)(-_,\:/@\#.]*$
Validator.OfficeCode=^[\\w]*$
Validator.Address=^[\\w\\s)(-_,\:/@\#.]*$
Validator.CityName=^[\\w\\s]*$
Validator.CountryName=^[a-zA-Z\\s)(-,]*$
Validator.PaymentDesc=^[a-z\\sA-Z]*$
Validator.MenuName=^[a-z\\sA-Z]*$
Validator.IcpTypeName=^[a-z\\sA-Z]*$
Validator.HairColorDesc=^[a-z\\sA-Z]*$
Validator.EyeColorDesc=^[a-z\\sA-Z]*$
Validator.ContactNo=^[0-9)(+,-]*$
Validator.IcpId=^[\\d]*$
Validator.CitizenshipCode=^[\\d]*$
Validator.OccupationName=^[a-zA-Z\\s)(-_,\:/]*$
Validator.OfficeName=^[a-zA-Z\\s)(-_,\:/]*$
Validator.IcpName=^[a-zA-Z\\s)(-_,\:/]*$
Validator.DesignationName=^[a-zA-Z\\s)(-_,\:/]*$
Validator.CategoryDesc=^[a-zA-Z\\s)(-_,\:/]*$
Validator.IcpTypeId=^[A-Za-z]*$
Validator.IcpType=^[A-Za-z]*$
Validator.DistrictName=^[A-Za-z]*$
Validator.CountryCode=^[A-Za-z]*$
Validator.CitizenshipDesc=^[A-Za-z]*$
Validator.OfficeType=^[A-Za-z]*$
Validator.FileStatusDesc=^[a-z\\sA-Z]{1,30}$
Validator.FileStatusRole=^[0-9,]{1,100}$
Validator.MaritalDesc=^[A-Z a-z]{1,25}$
Validator.StatusLevelName=^[A-Za-z]*$
Validator.RelaxationDesc=^[A-Z a-z]{1,30}$
Validator.ReferralName=^[A-Za-z]*$
Validator.PANNumber=^[\\w]*$
Validator.TANNumber=^[\\w]*$
Validator.VisaNumber=^[\\w]*$
Validator.IssueDate=^(0[1-9]|[12][0-9]|3[01])[-](0[1-9]|1[012])[-](19|20)\\d\\d$
Validator.ExpiryDate=^(0[1-9]|[12][0-9]|3[01])[-](0[1-9]|1[012])[-](19|20)\\d\\d$
Validator.Name=^[a-z\\sA-Z]*$
Validator.ProcessDesc=^[A-Z a-z]{1,50}$
Validator.AddressType=^[A-Z a-z]{1,50}$
Validator.SectionName=^[\\w]*$
Validator.PaymentModes=^[\\d,]*$
Validator.PrevRegnNo=^[a-zA-Z0-9/]*$
Validator.ContactNo_Space=^[0-9)(+, -]*$
Validator.SFormRegnNum=^[0-9a-zA-Z]*$
Validator.Amount=^[1-9]\d*{1,8}(\.\d+)?{0,3}$
Validator.Length=^[1-9]\d*{1,5}(\.\d+)?{0,2}$
Validator.Area=^[1-9]\d*{1,8}(\.\d+)?{0,3}$
Validator.PlinthArea=^[[1-9]\d*]{1,4}(\.\d+)?{0,3}$
Validator.PlinthAreaS=^[[1-9]\d*]{1,4}[(\.\d+)?{0,3}]$
Validator.BoundaryLength=^[1-9]\d*{1,6}(\.\d+)?{0,2}$
Validator.AmountCons=^([0-9]{1,5}|([0-9]{1,5}(\.[0-9]{0,1})?)|([0-9]{1,5}(\.[0-9]{0,2})?)|([0-9]{1,5}(\.[0-9]{0,3})?))$
Validator.Float15_2=^([0-9]{1,13}|([0-9]{1,13}(\.[0-9]{0,2})?)|([0-9]{1,13}(\.[0-9]{0,2})?)|([0-9]{1,13}(\.[0-9]{0,2})?))$
Validator.Float8_3=^([0-9]{1,5}|([0-9]{1,5}(\.[0-9]{0,1})?)|([0-9]{1,5}(\.[0-9]{0,2})?)|([0-9]{1,5}(\.[0-9]{0,3})?))$
Validator.Float6_2=^([0-9]{1,4}|([0-9]{1,4}(\.[0-9]{0,2})?)|([0-9]{1,4}(\.[0-9]{0,2})?)|([0-9]{1,4}(\.[0-9]{0,2})?))$
Validator.Float6_3=^([0-9]{1,4}|([0-9]{1,4}(\.[0-9]{0,3})?)|([0-9]{1,4}(\.[0-9]{0,3})?)|([0-9]{1,4}(\.[0-9]{0,3})?))$
Validator.RoomArea=^([0-9]{1,5}|([0-9]{1,5}(\.[0-9]{0,3})?)|([0-9]{1,2}(\.[0-9]{0,3})?))$
Validator.BuiltupArea=^([0-9]{1,5}|([0-9]{1,5}(\.[0-9]{0,3})?)|([0-9]{1,2}(\.[0-9]{0,3})?))$
Validator.TenderCostValidator=^([0-9]{1,13}|([0-9]{1,13}(\.[0-9]{0,2})?)|([0-9]{1,2}(\.[0-9]{0,2})?))$
Validator.GateValidator=^([0-9]{1,3}|([0-9]{1,2}(\.[0-9]{0,2})?)|([0-9]{1,3}(\.[0-9]{0,2})?))$
Validator.MobilazationAdvValidator=^([0-9]{1,13}|([0-9]{1,13}(\.[0-9]{0,2})?)|([0-9]{1,2}(\.[0-9]{0,2})?))$
Validator.IntRateMobilazationAdvValidator= ^([0-9]{1,2}|([0-9]{1,2}(\.[0-9]{0,2})?))$
Validator.PaymentMadeSoFarValidator=^([0-9]{1,13}|([0-9]{1,13}(\.[0-9]{0,2})?)|([0-9]{1,2}(\.[0-9]{0,2})?))$
Validator.LastPaymentAmmountValidator=^([0-9]{1,13}|([0-9]{1,13}(\.[0-9]{0,2})?)|([0-9]{1,2}(\.[0-9]{0,2})?))$
Validator.PercentageofAmmountSofar=^([0-9]{1,2}|([0-9]{1,2}(\.[0-9]{0,2})?))$
Validator.MobilizationAdvanceRecoveredValidator=^([0-9]{1,13}|([0-9]{1,13}(\.[0-9]{0,2})?)|([0-9]{1,2}(\.[0-9]{0,2})?))$
Validator.IntrestofMobilizationadvanceRecovered=^([0-9]{1,2}|([0-9]{1,2}(\.[0-9]{0,2})?))$
Validator.TaxRecoveredValidator=^([0-9]{1,13}|([0-9]{1,13}(\.[0-9]{0,2})?)|([0-9]{1,2}(\.[0-9]{0,2})?))$  
Validator.VatPaidValidator=^([0-9]{1,13}|([0-9]{1,13}(\.[0-9]{0,2})?)|([0-9]{1,2}(\.[0-9]{0,2})?))$   
Validator.PercentageOfWorkExecutedValidator=^([0-9]{1,13}|([0-9]{1,13}(\.[0-9]{0,2})?)|([0-9]{1,2}(\.[0-9]{0,2})?))$
Validator.PercentageOfWorkExecutedValidator= ^([0-9]{1,2}|([0-9]{1,2}(\.[0-9]{0,2})?))$
Validator.LiquidatedDamagesAmountValidator=^([0-9]{1,13}|([0-9]{1,13}(\.[0-9]{0,2})?)|([0-9]{1,2}(\.[0-9]{0,2})?))$
Validator.validate13_2=^([0-9]{1,13}|([0-9]{1,13}(\.[0-9]{0,2})?))$
Validator.validateMultiSelect=^[0-9, \\[\\]]*$
Validator.multiSelectAplha=^[A-Za-z, \\[\\]]*$
Validator.BlockYear=^[0-9-]*$
Validator.version= ^[0-9.]*$